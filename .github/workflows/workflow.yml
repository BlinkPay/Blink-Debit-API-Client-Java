name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up 64-bit Corretto 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          architecture: x64
          cache: maven

      - name: Run unit tests
        run: SPRING_PROFILES_ACTIVE=test mvn -Dgroups=unit test
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Run component tests
        run: SPRING_PROFILES_ACTIVE=test mvn -Dgroups=component test
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BLINKPAY_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          BLINKPAY_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

      - name: Run integration tests
        run: mvn -Dgroups=integration test
        env:
          BLINKPAY_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          BLINKPAY_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          BLINKPAY_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Run Snyk to check for vulnerabilities
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm" && \. $NVM_DIR/nvm.sh
          nvm install 16
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk monitor --org=blinkpay-zw9 --project-name=BlinkPay/Blink-Debit-API-Client-Java
        continue-on-error: true

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    environment: production
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          architecture: x64
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Build artifact
        run: mvn clean package -DskipTests
        env:
          SDK_VERSION_NUMBER: ${{ vars.SDK_VERSION_NUMBER }}
          BUILD_NUMBER: ${{ github.run_number }}

      - name: Publish to Apache Maven Central
        run: mvn deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PASSPHRASE }}